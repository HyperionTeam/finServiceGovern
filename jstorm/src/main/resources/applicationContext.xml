<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/context   
          http://www.springframework.org/schema/context/spring-context-3.0.xsd   
          http://www.springframework.org/schema/data/mongo   
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd   
          http://www.springframework.org/schema/beans   
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<context:property-placeholder location="classpath:application.properties" />
	
	<context:component-scan base-package="me.star2478"></context:component-scan>
	
	<!-- 注入mongodb相关类 -->
	<!-- <mongo:mongo-client id="mongo" host="${mongodb.host}"
		port="${mongodb.port}" credentials="${mongodb.username}:${mongodb.password}@${mongodb.databaseName}" /> -->
 	<mongo:mongo host="${mongodb.host}" port="${mongodb.port}" /> 
	<mongo:db-factory dbname="${mongodb.databaseName}"
		mongo-ref="mongo" />

	<bean id="mongoTypeMapper"
		class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">
		<constructor-arg name="typeKey">
			<null />
		</constructor-arg>
	</bean>

	<bean id="mongoMappingContext"
		class="org.springframework.data.mongodb.core.mapping.MongoMappingContext" />

	<bean id="mongoConverter"
		class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
		<constructor-arg name="mappingContext" ref="mongoMappingContext" />
		<property name="typeMapper" ref="mongoTypeMapper"></property>
	</bean>

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
		<constructor-arg name="mongoConverter" ref="mongoConverter" />
		<property name="writeResultChecking" value="EXCEPTION"/>
	</bean>

	<!-- 注入redis相关类 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="minIdle" value="${redis.minIdle}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!-- <property name="maxActive" value="${redis.maxActive}" /> -->
		<!-- <property name="maxWait" value="${redis.maxWait}" /> -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.host}"  type="java.lang.String"/>
		<constructor-arg index="2" value="${redis.port}" type="int"/>
		<constructor-arg index="3" value="${redis.maxWait}" />
	<!--     <constructor-arg index="4" value="${redis.pass}" /> -->      
	</bean>
	
	 <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:pool-config-ref="jedisPoolConfig"/>  
      
    <bean id="StringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory"   ref="connectionFactory" />
        <!-- <property name="jedisPool"   ref="jedisPool" />   -->
    </bean>

	<!-- 注入逻辑类 -->
	<!-- <bean id="AppStrategyService"
		class="me.star2478.jstorm.service.AppStrategyService" /> -->
	<bean id="StrategyServiceFactory"
		class="me.star2478.jstorm.service.StrategyServiceFactory" />

	<!-- <context:component-scan base-package="me.star2478"></context:component-scan> -->
	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties" />
	</bean>

</beans>